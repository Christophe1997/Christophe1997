<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on CastOff</title>
    <link>https://christophe1997.github.io/tags/haskell/</link>
    <description>Recent content in Haskell on CastOff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy;Christophe</copyright>
    <lastBuildDate>Fri, 19 Jun 2020 21:39:35 +0800</lastBuildDate><atom:link href="https://christophe1997.github.io/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Memoization in Haskell</title>
      <link>https://christophe1997.github.io/posts/memoization-in-haskell/</link>
      <pubDate>Fri, 19 Jun 2020 21:39:35 +0800</pubDate>
      
      <guid>https://christophe1997.github.io/posts/memoization-in-haskell/</guid>
      <description>Memoization是动态规划(Dynamic Programming)中自顶向下处理问题采用的策略, 其基本想法是通过将子问题的解保存起来避</description>
    </item>
    
    <item>
      <title>Surpasser Count</title>
      <link>https://christophe1997.github.io/posts/surpasser-count/</link>
      <pubDate>Wed, 06 May 2020 20:06:38 +0800</pubDate>
      
      <guid>https://christophe1997.github.io/posts/surpasser-count/</guid>
      <description>Pearl 2: 给定一个长度大于1的列表, 计算其元素的最大surpasser count, 要求算法复杂度$O(n log n)$. Type: msc: Ord a =&amp;gt; [a] -&amp;gt; Int &amp;ldquo;Pearls of functional algorithm design&amp;quot;</description>
    </item>
    
    <item>
      <title>The Smallest Free Number</title>
      <link>https://christophe1997.github.io/posts/the-smallest-free-number/</link>
      <pubDate>Tue, 05 May 2020 21:01:11 +0800</pubDate>
      
      <guid>https://christophe1997.github.io/posts/the-smallest-free-number/</guid>
      <description>Pearl 1: 给定一个自然数的有限集X, 计算不属于X的最小自然数. X表示为不包含重复元素的无序列表. 时间复杂度要求$O(n)$. Type: minfree :: [Int] -&amp;gt; Int(也可</description>
    </item>
    
    <item>
      <title>Monad and Transformers</title>
      <link>https://christophe1997.github.io/posts/monad-and-transformers/</link>
      <pubDate>Sat, 06 Apr 2019 20:26:43 +0000</pubDate>
      
      <guid>https://christophe1997.github.io/posts/monad-and-transformers/</guid>
      <description>Monad是Haskell中讨论最多的结构, 需要更详细的探讨其相关内容, 即使它对于Haskell而言不是必须的:(. 参考: All about Monads Monad Support 除了之前</description>
    </item>
    
    <item>
      <title>Haskell Algebra</title>
      <link>https://christophe1997.github.io/posts/haskell-algebra/</link>
      <pubDate>Sun, 24 Mar 2019 14:32:05 +0000</pubDate>
      
      <guid>https://christophe1997.github.io/posts/haskell-algebra/</guid>
      <description>Semigroup 半群即一个集合以及在之上定义的一个满足结合律的二元运算, 在Haskell中定义为(部分): 1 2 3 class Semigroup where (&amp;lt;&amp;gt;) :: a -&amp;gt; a -&amp;gt; a {-# MINIMAL (&amp;lt;&amp;gt;) #-} Laws 1 2 -- associativity a &amp;lt;&amp;gt;</description>
    </item>
    
  </channel>
</rss>
